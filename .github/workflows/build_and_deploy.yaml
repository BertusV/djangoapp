# For more info on Python, GitHub Actions, and Azure App Service 
# please head to https://aka.ms/python-webapps-actions

name: Build and deploy Django app to Azure App Service

on:
  push:
    branches: 
      - master
env:
  WEBAPP_NAME: ${{ secrets.WebApp_Name }}  # Set the WebApp name from GITHUB secrets
  SERVICE_PRINCIPAL: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
  KV_NAME: ${{ secrets.KEY_VAULT_NAME }}
  KV_SECRET: ${{ secrets.KEY_VAULT_SECRET_NAME }}
  DB_HOST: ${{ secrets.DB_SERVER }}
  DB_USER: ${{ secrets.DB_ADMINUSER }}
  DB_NAME: "pollsdb"
  DB_PASS: ${{ secrets.DB_ADMINPASSWORD }}
  
jobs:
  build-and-test:
    environment: Production
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    
#    - name: echo variables
#      run: echo ${{ env.WEBAPP_NAME }} , ${{ secrets.KEY_VAULT_NAME }} , ${{ secrets.KEY_VAULT_SECRET }}

    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ env.SERVICE_PRINCIPAL }}
    
    - uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: ${{ env.KV_NAME }} # Set the name of the KEY VAULT in Azure portal from GITHUB secrets
        secrets: ${{ env.KV_SECRET }} # comma separated list of secret keys to fetch from key vault
      id: myGetSecretAction # ID for secrets that you will reference

    - name: Setup Python version
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Create and start virtual environment
      run: |
        python3 -m venv venv
        source venv/bin/activate

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: set environment values
#      env:
#        KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}
#        KEY_VAULT_SECRET: ${{ secrets.KEY_VAULT_SECRET_NAME }}
#        DBHOST: ${{ secrets.DB_SERVER }}
#        DBUSER: ${{ secrets.DB_ADMINUSER }}
#        DBNAME: "pollsdb"
#        DBPASS: ${{ secrets.DB_ADMINPASSWORD }}

      run: |
        export KEY_VAULT_NAME=KV_NAME
        export KEY_VAULT_SECRET=KV_SECRET
        export DBHOST=DB_HOST
        export DBUSER=DB_USER
        export DBNAME="pollsdb"
        export DBPASS=DB_PASS

    - name: Collect static
      run: python manage.py collectstatic

    - name: Run tests
      run: python manage.py test
    
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v2
      with:
        name: python-app
        path: |
          . 
          !venv/
  
#  deploy-to-webapp:
#    needs: build-and-test
#    runs-on: ubuntu-latest

#   steps:
#     - uses: actions/download-artifact@v2
#       with:
#         name: python-app
#         path: .
      
#     - name: Log in to Azure CLI
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
    
#     - name: Disable static collection and set migration command on App Service
#       uses: Azure/appservice-settings@v1
#       with:  
#         app-name: ${{ env.WEBAPP_NAME }}
#         app-settings-json: '[{ "name": "DISABLE_COLLECTSTATIC", "value": "true" }, { "name": "POST_BUILD_COMMAND",  "value": "python manage.py makemigrations && python manage.py migrate" }, { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true" }, { "name": "DJANGO_ENV", "value": "production"}]'

#      - name: Deploy to App Service
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: ${{ env.WEBAPP_NAME}}

